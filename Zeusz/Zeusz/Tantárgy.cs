///////////////////////////////////////////////////////////
//  Tantárgy.cs
//  Implementation of the Class Tantárgy
//  Generated by Enterprise Architect
//  Original author: Esse Zsolt
///////////////////////////////////////////////////////////




using System;
using System.Text;
using System.IO;
using System.Xml.Linq;
using System.Linq;
namespace Zeusz {
	public class Tantárgy {
        public static Random R = new Random();
        private string tárgynév;

        public string Tárgynév
        {
            get { return tárgynév; }
            set { tárgynév = value; }
        }
        private string tárgykód;

        public string Tárgykód
        {
            get { return tárgykód; }
            set { tárgykód = value; }
        }
        private string helyszín;

        public string Helyszín
        {
            get { return helyszín; }
            set { helyszín = value; }
        }
        private DateTime végeIdõpont;

        public DateTime VégeIdõpont
        {
            get { return végeIdõpont; }
            set { végeIdõpont = value; }
        }
		/// <summary>
		/// óra + nap(ez megadható?)
		/// </summary>
        private DateTime kezdésIdõpont;

        public DateTime KezdésIdõpont
        {
            get { return kezdésIdõpont; }
            set { kezdésIdõpont = value; }
        }
		/// <summary>
		/// páros/páratlan/minden hét
		/// </summary>
        private string hét;

        public string Hét
        {
            get { return hét; }
            set { hét = value; }
        }
        private string[] oktatók;

        public string[] Oktatók
        {
            get { return oktatók; }
            set { oktatók = value; }
        }

        private string követelmények;

        public string Követelmények
        {
            get { return követelmények; }
            set { követelmények = value; }
        }
        private string segédletek;

        public string Segédletek
        {
            get { return segédletek; }
            set { segédletek = value; }
        }




        //metódusok
        public string TárgyKódGen()
        {
            //pszeudorandom
            string str = this.tárgynév[0] + this.oktatók[0][0] + this.kezdésIdõpont.ToString()[0] +
                this.hét[this.hét.Length-1] + R.Next(0, 9).ToString() + (char)R.Next(65, 90);
            return str;
        }



        //konstruktor
		public Tantárgy(){
            
		}

        public Tantárgy(string tárgynév, string tárgykód, string helyszín,DateTime kezdés,
            DateTime vége, string hét, string[] oktatók, string követelmények, string segédletek)
        {
            this.tárgynév = tárgynév;
            this.tárgykód = tárgykód;
            this.helyszín = helyszín;
            this.kezdésIdõpont = kezdés;
            this.végeIdõpont = vége;
            this.hét = hét;
            this.oktatók = oktatók;
            this.követelmények = követelmények;
            this.segédletek = segédletek;
        }


        //tárgykód nélküli
        public Tantárgy(string tárgynév,  string helyszín, DateTime kezdés,
                DateTime vége, string hét, string[] oktatók, string követelmények, string segédletek)
        {
            this.tárgynév = tárgynév;
            this.helyszín = helyszín;
            this.kezdésIdõpont = kezdés;
            this.végeIdõpont = vége;
            this.hét = hét;
            this.oktatók = oktatók;
            this.követelmények = követelmények;
            this.segédletek = segédletek;

            bool foglalt = false;
            do {
                this.tárgykód = TárgyKódGen();               
                try
                {
                    if (File.Exists("Tantárgy.xml"))
                    {
                        XDocument doc = XDocument.Load("Tantárgy.xml");
                        var t = from tt in doc.Descendants("Tantárgy")
                                where tt.Attribute("tárgykód").Value == this.tárgykód
                                select tt;
                        if (t != null && t.First() != null)
                            foglalt = true;
                        else
                            foglalt = false;
                    }
                }
                catch (Exception e)
                {

                    throw (e);
                }
            } while(foglalt);
        }

        

        /// <summary>
        /// ToString()-ek
        /// </summary>
        /// <returns></returns>


        public override string ToString()
        {
            return this.Tárgynév + "\n"
                + this.kezdésIdõpont.Hour.ToString() + ":" + this.kezdésIdõpont.Minute.ToString() + " - " +
                    this.végeIdõpont.Hour.ToString() + ":" + this.végeIdõpont.Minute.ToString() + "\n " +
                    this.hét + "\n" +
                    this.helyszín + "\n" +
                    this.oktatók + "\n" +
                    this.tárgykód;

        }

        public string ToStringTeljes()
        {
            return this.Tárgynév + "\n"
            + this.kezdésIdõpont.Hour.ToString() + ":" + this.kezdésIdõpont.Minute.ToString() + " - " +
            this.végeIdõpont.Hour.ToString() + ":" + this.végeIdõpont.Minute.ToString() + "\n " +
            this.hét + "\n" +
            this.helyszín + "\n" +
            this.oktatók + "\n" +
            this.tárgykód + "\n" +
            this.követelmények + "\n" +
            this.segédletek;
        }


		//public virtual void Dispose(){}

	}//end Tantárgy

}//end namespace Zeusz